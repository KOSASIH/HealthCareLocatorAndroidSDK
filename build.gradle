
buildscript {
    apply from: 'versions.gradle'
    ext.kotlin_version = "1.3.72"
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$versions.android_gradle_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$versions.dokkaVersion"
        classpath 'com.apollographql.apollo:apollo-runtime:2.4.4'
        classpath 'com.apollographql.apollo:apollo-gradle-plugin:2.4.4'
        classpath "com.google.gms:google-services:$versions.google_services_gradle_plugin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url = "https://kotlin.bintray.com/kotlinx/" }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            packageGroup = "com.healthcarelocator"
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = "009pTJaB"
            password = "SttXDMEWCGTVQjFXVdXrszalcZGjr2uhPtrbNqnLsRej"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.register("downloadSchema", com.apollographql.apollo.gradle.internal.ApolloDownloadSchemaTask) {
    endpoint = "https://dev-eastus-onekey-sdk-apim.azure-api.net/api/graphql"
    schemaRelativeToProject = "onekeysdk/src/main/graphql/schema.json"
}
